{
 "etype": "InternalError", 
 "evalue": "InternalError(1054, u\"Unknown column 'source.full_name' in 'field list'\")", 
 "exception": {
  "args": "(1054, u\"Unknown column 'source.full_name' in 'field list'\")", 
  "message": "''"
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://erp.manufacturing.com/' [POST]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/umoms/moms-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "59": "", 
    "60": "\t\tif frappe.local.form_dict.cmd:", 
    "61": "\t\t\tresponse = frappe.handler.handle()", 
    "62": "", 
    "63": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 61
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'frappe.desk.form.save.savedocs'", 
    "data": "None", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "19": "", 
    "20": "\tif cmd!='login':", 
    "21": "\t\tdata = execute_cmd(cmd)", 
    "22": "", 
    "23": "\t# data can be an empty string or list which are valid responses"
   }, 
   "lnum": 21
  }, 
  {
   "call": "(cmd=u'frappe.desk.form.save.savedocs', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'action': u'Save', 'doc': u'{\"timeline_field\":\"...null}', 'cmd': u'frappe.desk.form.save.savedocs'}", 
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function savedocs>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "54": "\tis_whitelisted(method)", 
    "55": "", 
    "56": "\treturn frappe.call(method, **frappe.form_dict)", 
    "57": "", 
    "58": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(fn=<function savedocs>, *args=(), **kwargs={'action': u'Save', 'cmd': u'frappe.desk.form.save.savedocs', 'doc': u'{\"timeline_field\":\"\",\"image_view\":0,\"allow_imp...ry\":0,\"__unsaved\":1,\"server_code_compiled\":null}'})", 
   "dump": {
    "args": "()", 
    "fn": "<function savedocs>", 
    "newargs": "{'action': u'Save', 'doc': u'{\"timeline_field\":\"\",\"image_view\":0,\"allow_imp...ry\":0,\"__unsaved\":1,\"server_code_compiled\":null}'}"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "1034": "\tnewargs = get_newargs(fn, kwargs)", 
    "1035": "", 
    "1036": "\treturn fn(*args, **newargs)", 
    "1037": "", 
    "1038": "def get_newargs(fn, kwargs):"
   }, 
   "lnum": 1036
  }, 
  {
   "call": "(doc=<frappe.core.doctype.doctype.doctype.DocType object>, action=u'Save')", 
   "dump": {
    "doc": "<frappe.core.doctype.doctype.doctype.DocType object>", 
    "doc. save": "<bound method DocType.save of <frappe.core.doctype.doctype.doctype.DocType object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/desk/form/save.py", 
   "func": "savedocs", 
   "lines": {
    "20": "\t\telse:", 
    "21": "\t\t\ttry:", 
    "22": "\t\t\t\tdoc.save()", 
    "23": "\t\t\texcept frappe.NameError as e:", 
    "24": "\t\t\t\tdoctype, name, original_exception = e if isinstance(e, tuple) else (doc.doctype or \"\", doc.name or \"\", None)"
   }, 
   "lnum": 22
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>", 
    "self. _save": "<bound method DocType._save of <frappe.core.doctype.doctype.doctype.DocType object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "258": "\tdef save(self, *args, **kwargs):", 
    "259": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "260": "\t\treturn self._save(*args, **kwargs)", 
    "261": "", 
    "262": "\tdef _save(self, ignore_permissions=None, ignore_version=None):"
   }, 
   "lnum": 260
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, ignore_permissions=None, ignore_version=None)", 
   "dump": {
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>", 
    "self. run_post_save_methods": "<bound method DocType.run_post_save_methods of <frappe.core.doctype.doctype.doctype.DocType object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "311": "", 
    "312": "\t\tself.update_children()", 
    "313": "\t\tself.run_post_save_methods()", 
    "314": "", 
    "315": "\t\treturn self"
   }, 
   "lnum": 313
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>)", 
   "dump": {
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>", 
    "self. run_method": "<bound method DocType.run_method of <frappe.core.doctype.doctype.doctype.DocType object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "903": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "904": "\t\tif self._action==\"save\":", 
    "905": "\t\t\tself.run_method(\"on_update\")", 
    "906": "\t\telif self._action==\"submit\":", 
    "907": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 905
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "out": "undefined", 
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "770": "", 
    "771": "\t\tfn.__name__ = str(method)", 
    "772": "\t\tout = Document.hook(fn)(self, *args, **kwargs)", 
    "773": "", 
    "774": "\t\tself.run_notifications(method)"
   }, 
   "lnum": 772
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "1046": "", 
    "1047": "\t\t\tcomposed = compose(f, *hooks)", 
    "1048": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "1049": "", 
    "1050": "\t\treturn composer"
   }, 
   "lnum": 1048
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "1029": "\t\tdef compose(fn, *hooks):", 
    "1030": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "1031": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "1032": "\t\t\t\tfor f in hooks:", 
    "1033": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 1031
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "764": "", 
    "765": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "766": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "767": "\t\telse:", 
    "768": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 766
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>)", 
   "dump": {
    "self": "<frappe.core.doctype.doctype.doctype.DocType object>", 
    "self. update_fields_to_fetch": "<bound method DocType.update_fields_to_fetch of ...ppe.core.doctype.doctype.doctype.DocType object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/core/doctype/doctype/doctype.py", 
   "func": "on_update", 
   "lines": {
    "246": "\t\tmake_module_and_roles(self)", 
    "247": "", 
    "248": "\t\tself.update_fields_to_fetch()", 
    "249": "", 
    "250": "\t\tfrom frappe import conf"
   }, 
   "lnum": 248
  }, 
  {
   "call": "(self=<frappe.core.doctype.doctype.doctype.DocType object>)", 
   "dump": {
    "frappe. db": "<frappe.database.Database instance>", 
    "frappe.db. sql": "<bound method Database.sql of <frappe.database.Database instance>>", 
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>", 
    "query": "u'update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\...\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" '"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/core/doctype/doctype/doctype.py", 
   "func": "update_fields_to_fetch", 
   "lines": {
    "150": "\t\tif self.flags.update_fields_to_fetch_queries and not self.issingle:", 
    "151": "\t\t\tfor query in self.flags.update_fields_to_fetch_queries:", 
    "152": "\t\t\t\tfrappe.db.sql(query)", 
    "153": "", 
    "154": "\tdef validate_document_type(self):"
   }, 
   "lnum": 152
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, query=u'update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\...\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" ', values=(), as_dict=0, as_list=0, formatted=0, debug=0, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None, explain=False)", 
   "dump": {
    "query": "u'update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\...\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" '", 
    "self": "<frappe.database.Database instance>", 
    "self. _cursor": "<pymysql.cursors.Cursor object>", 
    "self._cursor. execute": "<bound method Cursor.execute of <pymysql.cursors.Cursor object>>"
   }, 
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/database.py", 
   "func": "sql", 
   "lines": {
    "212": "\t\t\t\t\tfrappe.log(\">>>>\")", 
    "213": "", 
    "214": "\t\t\t\tself._cursor.execute(query)", 
    "215": "", 
    "216": "\t\t\t\tif frappe.flags.in_migrate:"
   }, 
   "lnum": 214
  }, 
  {
   "call": "(self=<pymysql.cursors.Cursor object>, query='update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\t\\t\\t\\t\\t\\t\\t`tabB...\\t\\t\\t\\t\\t\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" ', args=None)", 
   "dump": {
    "query": "'update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\t\\t\\t\\t\\t\\t\\t`tabB...\\t\\t\\t\\t\\t\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" '", 
    "result": "undefined", 
    "self": "<pymysql.cursors.Cursor object>", 
    "self. _query": "<bound method Cursor._query of <pymysql.cursors.Cursor object>>"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/cursors.py", 
   "func": "execute", 
   "lines": {
    "168": "        query = self.mogrify(query, args)", 
    "169": "", 
    "170": "        result = self._query(query)", 
    "171": "        self._executed = query", 
    "172": "        return result"
   }, 
   "lnum": 170
  }, 
  {
   "call": "(self=<pymysql.cursors.Cursor object>, q='update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\t\\t\\t\\t\\t\\t\\t`tabB...\\t\\t\\t\\t\\t\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" ')", 
   "dump": {
    "conn": "<pymysql.connections.Connection object>", 
    "conn. query": "<bound method Connection.query of <pymysql.connections.Connection object>>", 
    "q": "'update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\t\\t\\t\\t\\t\\t\\t`tabB...\\t\\t\\t\\t\\t\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" '"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/cursors.py", 
   "func": "_query", 
   "lines": {
    "326": "        self._last_executed = q", 
    "327": "        self._clear_result()", 
    "328": "        conn.query(q)", 
    "329": "        self._do_get_result()", 
    "330": "        return self.rowcount"
   }, 
   "lnum": 328
  }, 
  {
   "call": "(self=<pymysql.connections.Connection object>, sql='update\\n\\t\\t\\t\\t\\t\\t\\t`tabCustomer` source,\\n\\t\\t\\t\\t\\t\\t\\t`tabB...\\t\\t\\t\\t\\t\\t\\tand ifnull(target.`customer_name`, \\'\\')=\"\" ', unbuffered=False)", 
   "dump": {
    "self": "<pymysql.connections.Connection object>", 
    "self. _affected_rows": "1", 
    "self. _read_query_result": "<bound method Connection._read_query_result of <pymysql.connections.Connection object>>", 
    "unbuffered": "False"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py", 
   "func": "query", 
   "lines": {
    "515": "                sql = sql.encode(self.encoding, 'surrogateescape')", 
    "516": "        self._execute_command(COMMAND.COM_QUERY, sql)", 
    "517": "        self._affected_rows = self._read_query_result(unbuffered=unbuffered)", 
    "518": "        return self._affected_rows", 
    "519": ""
   }, 
   "lnum": 517
  }, 
  {
   "call": "(self=<pymysql.connections.Connection object>, unbuffered=False)", 
   "dump": {
    "result": "<pymysql.connections.MySQLResult object>", 
    "result. read": "<bound method MySQLResult.read of <pymysql.connections.MySQLResult object>>"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py", 
   "func": "_read_query_result", 
   "lines": {
    "730": "        else:", 
    "731": "            result = MySQLResult(self)", 
    "732": "            result.read()", 
    "733": "        self._result = result", 
    "734": "        if result.server_status is not None:"
   }, 
   "lnum": 732
  }, 
  {
   "call": "(self=<pymysql.connections.MySQLResult object>)", 
   "dump": {
    "first_packet": "undefined", 
    "self": "<pymysql.connections.MySQLResult object>", 
    "self. connection": "None", 
    "self.connection._read_packet": "undefined"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py", 
   "func": "read", 
   "lines": {
    "1073": "    def read(self):", 
    "1074": "        try:", 
    "1075": "            first_packet = self.connection._read_packet()", 
    "1076": "", 
    "1077": "            if first_packet.is_ok_packet():"
   }, 
   "lnum": 1075
  }, 
  {
   "call": "(self=<pymysql.connections.Connection object>, packet_type=<class 'pymysql.protocol.MysqlPacket'>)", 
   "dump": {
    "packet": "<pymysql.protocol.MysqlPacket object>", 
    "packet. check_error": "<bound method MysqlPacket.check_error of <pymysql.protocol.MysqlPacket object>>"
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py", 
   "func": "_read_packet", 
   "lines": {
    "682": "", 
    "683": "        packet = packet_type(buff, self.encoding)", 
    "684": "        packet.check_error()", 
    "685": "        return packet", 
    "686": ""
   }, 
   "lnum": 684
  }, 
  {
   "call": "(self=<pymysql.protocol.MysqlPacket object>)", 
   "dump": {
    "err. raise_mysql_exception": "<function raise_mysql_exception>", 
    "global err": "<module 'pymysql.err' from '/home/umoms/moms-ben...cal/lib/python2.7/site-packages/pymysql/err.pyc'>", 
    "self": "<pymysql.protocol.MysqlPacket object>", 
    "self. _data": "\"\\xff\\x1e\\x04#42S22Unknown column 'source.full_name' in 'field list'\""
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/protocol.py", 
   "func": "check_error", 
   "lines": {
    "218": "            errno = self.read_uint16()", 
    "219": "            if DEBUG: print(\"errno =\", errno)", 
    "220": "            err.raise_mysql_exception(self._data)", 
    "221": "", 
    "222": "    def dump(self):"
   }, 
   "lnum": 220
  }, 
  {
   "call": "(data=\"\\xff\\x1e\\x04#42S22Unknown column 'source.full_name' in 'field list'\")", 
   "dump": {
    "errno": "1054", 
    "errorclass": "<class 'pymysql.err.InternalError'>", 
    "errval": "u\"Unknown column 'source.full_name' in 'field list'\""
   }, 
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/err.py", 
   "func": "raise_mysql_exception", 
   "lines": {
    "105": "        errval = data[9:].decode('utf-8', 'replace')", 
    "106": "    else:", 
    "107": "        errval = data[3:].decode('utf-8', 'replace')", 
    "108": "    errorclass = error_map.get(errno, InternalError)", 
    "109": "    raise errorclass(errno, errval)"
   }, 
   "lnum": 109
  }
 ], 
 "locals": {
  "data": "\"\\xff\\x1e\\x04#42S22Unknown column 'source.full_name' in 'field list'\"", 
  "errno": "1054", 
  "errorclass": "<class 'pymysql.err.InternalError'>", 
  "errval": "u\"Unknown column 'source.full_name' in 'field list'\"", 
  "is_41": "True"
 }, 
 "pyver": "Python 2.7.15rc1: /home/umoms/moms-bench/env/bin/python (prefix: /home/umoms/moms-bench/env)", 
 "timestamp": "2019-07-25 12:43:30.001743", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/app.py\", line 61, in application\n    response = frappe.handler.handle()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/handler.py\", line 21, in handle\n    data = execute_cmd(cmd)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/handler.py\", line 56, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/__init__.py\", line 1036, in call\n    return fn(*args, **newargs)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/desk/form/save.py\", line 22, in savedocs\n    doc.save()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 260, in save\n    return self._save(*args, **kwargs)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 313, in _save\n    self.run_post_save_methods()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 905, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 772, in run_method\n    out = Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 1048, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 1031, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/model/document.py\", line 766, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/core/doctype/doctype/doctype.py\", line 248, in on_update\n    self.update_fields_to_fetch()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/core/doctype/doctype/doctype.py\", line 152, in update_fields_to_fetch\n    frappe.db.sql(query)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/database.py\", line 214, in sql\n    self._cursor.execute(query)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\nInternalError: (1054, u\"Unknown column 'source.full_name' in 'field list'\")\n"
}